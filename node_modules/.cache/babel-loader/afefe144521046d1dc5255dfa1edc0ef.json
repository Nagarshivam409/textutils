{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\React\\\\textutils\\\\src\\\\components\\\\Alert.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Alert(props) {\n  const capitalize = word => {\n    let newword = word.toLowerCase();\n    return word.charAt(0).toUpperCase() + newword.slice(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: `alert alert-${props.alert.type} alert-dismissible fade show`,\n    role: \"alert\",\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: capitalize(props.alert.type)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this), \" \", props.alert.msg]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n_c = Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["D:/project/React/textutils/src/components/Alert.js"],"names":["React","Alert","props","capitalize","word","newword","toLowerCase","charAt","toUpperCase","slice","alert","type","msg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,QAAMC,UAAU,GAAEC,IAAD,IAAQ;AACrB,QAAIC,OAAO,GAACD,IAAI,CAACE,WAAL,EAAZ;AACA,WAAOF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA6BH,OAAO,CAACI,KAAR,CAAc,CAAd,CAApC;AACH,GAHD;;AAIF,sBAEI;AAAK,IAAA,KAAK,EAAG,eAAcP,KAAK,CAACQ,KAAN,CAAYC,IAAK,8BAA5C;AAA2E,IAAA,IAAI,EAAC,OAAhF;AAAA,4BACJ;AAAA,gBAASR,UAAU,CAACD,KAAK,CAACQ,KAAN,CAAYC,IAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,YADI,OAC6CT,KAAK,CAACQ,KAAN,CAAYE,GADzD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQD;KAbuBX,K","sourcesContent":["import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let newword=word.toLowerCase();\r\n        return word.charAt(0).toUpperCase()+newword.slice(1);\r\n    }\r\n  return (\r\n    \r\n      <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n  \r\n</div>\r\n    \r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}