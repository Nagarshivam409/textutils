{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\React\\\\textutils\\\\src\\\\components\\\\Textform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to UpperCase\", \"success\");\n  };\n\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to LowerCase\", \"success\");\n  };\n\n  const handleClearClick = () => {\n    let newText = '';\n    setText(newText);\n    props.showAlert(\" All Clear \", \"success\");\n  };\n\n  const handleCopy = () => {\n    let newText = document.getElementById(\"my-box\");\n    newText.select();\n    navigator.clipboard.writeText(newText.value);\n    props.showAlert(\"Copied to Clipboard\", \"success\");\n  };\n\n  const handleRemoveSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra Spaces have been removed\", \"success\");\n  };\n\n  const handleOnClick = event => {\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" container \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnClick,\n        id: \"my-box\",\n        rows: \"8\",\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black',\n          backgroundColor: props.mode === 'dark' ? '#8d8d8d' : 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary my-2 mx-1\",\n      onClick: handleUpClick,\n      children: \"Convert To UpperCase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary my-2 mx-1\",\n      onClick: handleLoClick,\n      children: \"Convert To LowerCase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary my-2 mx-1\",\n      onClick: handleClearClick,\n      children: \"Clear Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary my-2 mx-1\",\n      onClick: handleCopy,\n      children: \"Copy Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary my-2 mx-1\",\n      onClick: handleRemoveSpaces,\n      children: \"Remove Extra Spaces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Text Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Your Sentence has \", text.split(\" \").length, \" words and \", text.length, \" Character\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Time Required to Read: \", 0.008 * text.split(\" \").length, \" Minutes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", text.length > 0 ? text : \"Write your Text above in TextBox to Preview it here...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Textform, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = Textform;\nTextform.propType = {\n  title: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"sources":["D:/project/React/textutils/src/components/Textform.js"],"names":["React","useState","PropTypes","Textform","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleClearClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","value","handleRemoveSpaces","split","join","handleOnClick","event","target","color","mode","heading","backgroundColor","length","propType","title","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\" All Clear \",\"success\");\r\n    }\r\n    const handleCopy=()=>{\r\n        let newText=document.getElementById(\"my-box\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n    const handleRemoveSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces have been removed\",\"success\");\r\n    }\r\n    const handleOnClick=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>  \r\n    \r\n    <div className=\" container \">\r\n    <h1 style={{color:props.mode==='dark'? 'white':'black'}}>{props.heading}</h1>\r\n     <textarea className=\"form-control\" value={text} onChange={handleOnClick} id=\"my-box\" rows=\"8\" style={{color:props.mode==='dark'? 'white':'black',backgroundColor: props.mode==='dark'?'#8d8d8d':'white'}} ></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary my-2 mx-1\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n    <button className=\"btn btn-primary my-2 mx-1\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n    <button className=\"btn btn-primary my-2 mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary my-2 mx-1\" onClick={handleCopy}>Copy Text</button>\r\n    <button className=\"btn btn-primary my-2 mx-1\" onClick={handleRemoveSpaces}>Remove Extra Spaces</button>\r\n    <div className=\"container my-2\" style={{color:props.mode==='dark'? 'white':'black'}}>\r\n        <h1>Your Text Summary:</h1>\r\n        <p> Your Sentence has {text.split(\" \").length} words and {text.length} Character</p>\r\n        <p>Average Time Required to Read: {0.008*text.split(\" \").length} Minutes.</p>\r\n        <h2>Preview:</h2>\r\n        <p> {text.length>0?text:\"Write your Text above in TextBox to Preview it here...\"}</p>\r\n    </div>\r\n    </> \r\n)\r\n}\r\nTextform.propType={title:PropTypes.string}"]},"metadata":{},"sourceType":"module"}