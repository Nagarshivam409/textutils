{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\React\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; // import About from './components/About';\n\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert'; // import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState('null');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert('null');\n    }, 1500);\n  };\n\n  const toggle = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#040420';\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"TextUtils -DarkMode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"TextUtils -LightMode\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        heading: \"Enter Your Text Below to Analyze\",\n        mode: mode,\n        showAlert: showAlert,\n        toggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"x2nDDHkmeIgk2fzm1tH6R3XZ17Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/project/React/textutils/src/App.js"],"names":["Navbar","Textform","React","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggle","document","body","style","backgroundColor","title"],"mappings":";;;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;AACA;AACA;AAEA;;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAD,CAAlC;;AACA,QAAMO,SAAS,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;AAC9BH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAACF,OADG;AAEPC,MAAAA,IAAI,EAACA;AAFE,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GARD;;AAUA,QAAMM,MAAM,GAAC,MAAI;AACf,QAAGT,IAAI,KAAG,OAAV,EAAkB;AAChBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,SAApC;AACAT,MAAAA,SAAS,CAAC,mBAAD,EAAqB,SAArB,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAe,qBAAf;AAED,KAND,MAMK;AACHb,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;AACAT,MAAAA,SAAS,CAAC,oBAAD,EAAsB,SAAtB,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAe,sBAAf;AAGD;AACF,GAfD;;AAgBA,sBACC;AAAA,4BAEC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,IAAI,EAAEd,IAAhC;AAAsC,MAAA,MAAM,EAAES;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,YAHD,eAMO;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE,kCAAnB;AAAsD,QAAA,IAAI,EAAEF,IAA5D;AAAkE,QAAA,SAAS,EAAEI,SAA7E;AAAwF,QAAA,MAAM,EAAEK;AAAhG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANP;AAAA,kBADD;AA2BD;;GAxDQV,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["\r\nimport './App.css';\r\n// import About from './components/About';\r\nimport Navbar from './components/Navbar'\r\nimport Textform from './components/Textform';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert'\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route\r\n  \r\n// } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');\r\n  const [alert, setAlert] = useState('null');\r\n  const showAlert=(message,type)=>{\r\n    setAlert({\r\n      msg:message,\r\n      type:type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert('null')\r\n    }, 1500);\r\n  }\r\n  \r\n  const toggle=()=>{\r\n    if(mode==='light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor='#040420';\r\n      showAlert(\"Dark Mode Enabled\",\"success\");\r\n      document.title=\"TextUtils -DarkMode\";\r\n      \r\n    }else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor='white';\r\n      showAlert(\"Light Mode Enabled\",\"success\");\r\n      document.title=\"TextUtils -LightMode\";\r\n      \r\n      \r\n    }\r\n  }\r\n  return (\r\n   <>\r\n   {/* <Router> */}\r\n    <Navbar title=\"TextUtils\" mode={mode} toggle={toggle}/>\r\n    <Alert alert={alert}/>\r\n    {/* <Switch>\r\n        <Route exact path=\"/\"> */}\r\n          <div className=\"container my-3\">\r\n            <Textform heading =\"Enter Your Text Below to Analyze\" mode={mode} showAlert={showAlert} toggle={toggle} />\r\n          </div>\r\n          {/* </Route>\r\n          <Route exact path=\"/about\">\r\n           */}\r\n              {/* <About/>\r\n            \r\n          </Route> */}\r\n          {/* <Route path=\"/home\">\r\n          <div className=\"container my-3\">\r\n            <Textform heading =\"Enter Your Text Below to Analyze\" mode={mode} showAlert={showAlert} toggle={toggle} />\r\n          </div>\r\n          </Route> */}\r\n          \r\n        {/* </Switch>\r\n    \r\n        </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}